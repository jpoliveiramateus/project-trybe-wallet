{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { ATT_TOTAL, FETCH_CURRENCIES, REMOVE_EXPENSE, SAVE_EXPENSE, TOTAL_PRICE, EDIT_EXPENSE, VALUE_INPUTS, EDITED_EXPENSE } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0\n};\nexport const walletReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action === null || action === void 0 ? void 0 : action.type) {\n    case FETCH_CURRENCIES:\n      return { ...state,\n        currencies: action.payload.currencies\n      };\n\n    case SAVE_EXPENSE:\n      return { ...state,\n        expenses: [...state.expenses, action.payload.expense]\n      };\n\n    case REMOVE_EXPENSE:\n      return { ...state,\n        editor: false,\n        expenses: state.expenses.filter(exp => JSON.stringify(exp) !== JSON.stringify(action.payload.expense))\n      };\n\n    case EDIT_EXPENSE:\n      return { ...state,\n        editor: true,\n        idToEdit: action.payload.expense.id\n      };\n\n    case EDITED_EXPENSE:\n      return { ...state,\n        editor: false,\n        idToEdit: 0,\n        expenses: action.payload.expenseEdited\n      };\n\n    default:\n      return state;\n  }\n};\nconst INITIAL_STATE_TOTAL = {\n  total: '0.00',\n  input: {\n    value: '',\n    description: '',\n    currency: 'USD',\n    method: 'Dinheiro',\n    tag: 'Alimentação',\n    button: true\n  }\n};\nexport const totalPriceReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE_TOTAL;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action === null || action === void 0 ? void 0 : action.type) {\n    case VALUE_INPUTS:\n      return { ...state,\n        input: action.payload.value\n      };\n\n    case TOTAL_PRICE:\n      return { ...state,\n        total: (Number(state.total) + Number(action.payload.price)).toFixed(2)\n      };\n\n    case REMOVE_EXPENSE:\n      return { ...state,\n        // input: {},\n        total: (Number(state.total) - Math.floor(100 * (Number(action.payload.expense.exchangeRates[action.payload.expense.currency].ask) * Number(action.payload.expense.value))) / 100).toFixed(2)\n      };\n\n    case ATT_TOTAL:\n      return { ...state,\n        total: action.payload.total.toLocaleString('pt-br', {\n          style: 'currency',\n          currency: 'BRL'\n        })\n      };\n\n    case EDIT_EXPENSE:\n      return { ...state,\n        input: action.payload.expense\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ATT_TOTAL","FETCH_CURRENCIES","REMOVE_EXPENSE","SAVE_EXPENSE","TOTAL_PRICE","EDIT_EXPENSE","VALUE_INPUTS","EDITED_EXPENSE","INITIAL_STATE","currencies","expenses","editor","idToEdit","walletReducer","state","action","type","payload","expense","filter","exp","JSON","stringify","id","expenseEdited","INITIAL_STATE_TOTAL","total","input","value","description","currency","method","tag","button","totalPriceReducer","Number","price","toFixed","Math","floor","exchangeRates","ask","toLocaleString","style"],"sources":["/home/portuga/trybe-projetos/sd-021-b-project-trybewallet/src/reducers/wallet.js"],"sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n\nimport { ATT_TOTAL,\n  FETCH_CURRENCIES,\n  REMOVE_EXPENSE,\n  SAVE_EXPENSE,\n  TOTAL_PRICE, EDIT_EXPENSE, VALUE_INPUTS, EDITED_EXPENSE } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n};\n\nexport const walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action?.type) {\n  case FETCH_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.payload.currencies,\n    };\n  case SAVE_EXPENSE:\n    return {\n      ...state,\n      expenses: [...state.expenses, action.payload.expense],\n    };\n  case REMOVE_EXPENSE:\n    return {\n      ...state,\n      editor: false,\n      expenses: state.expenses\n        .filter((exp) => JSON.stringify(exp) !== JSON.stringify(action.payload.expense)),\n    };\n  case EDIT_EXPENSE:\n    return {\n      ...state,\n      editor: true,\n      idToEdit: action.payload.expense.id,\n    };\n  case EDITED_EXPENSE:\n    return {\n      ...state,\n      editor: false,\n      idToEdit: 0,\n      expenses: action.payload.expenseEdited,\n    };\n  default:\n    return state;\n  }\n};\n\nconst INITIAL_STATE_TOTAL = {\n  total: '0.00',\n  input: {\n    value: '',\n    description: '',\n    currency: 'USD',\n    method: 'Dinheiro',\n    tag: 'Alimentação',\n    button: true,\n  },\n};\n\nexport const totalPriceReducer = (state = INITIAL_STATE_TOTAL, action) => {\n  switch (action?.type) {\n  case VALUE_INPUTS:\n    return {\n      ...state,\n      input: action.payload.value,\n    };\n  case TOTAL_PRICE:\n    return {\n      ...state,\n      total: (Number(state.total) + Number(action.payload.price)).toFixed(2),\n    };\n  case REMOVE_EXPENSE:\n    return {\n      ...state,\n      // input: {},\n      total: (Number(state.total)\n      - (Math.floor(100\n      * (Number(action.payload.expense.exchangeRates[action.payload.expense.currency].ask)\n      * Number(action.payload.expense.value))) / 100)).toFixed(2),\n    };\n  case ATT_TOTAL:\n    return {\n      ...state,\n      total: action.payload.total.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' }),\n    };\n  case EDIT_EXPENSE:\n    return {\n      ...state,\n      input: action.payload.expense,\n    };\n  default:\n    return state;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}