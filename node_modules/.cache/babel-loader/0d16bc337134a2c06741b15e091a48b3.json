{"ast":null,"code":"var _jsxFileName = \"/home/portuga/trybe-projetos/sd-021-b-project-trybewallet/src/components/ExpenseForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes, { string } from 'prop-types';\nimport { saveExpense } from '../actions';\nconst INITIAL_STATE = {\n  value: '',\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação'\n};\n\nclass ExpenseForm extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = INITIAL_STATE;\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState({\n        [target.name]: value\n      });\n    };\n\n    this.addExpenseFunc = () => {\n      const {\n        addExpense,\n        expenses\n      } = this.props;\n      const {\n        value,\n        description,\n        currency,\n        method,\n        tag\n      } = this.state;\n      const expense = {\n        id: expenses.length,\n        value,\n        description,\n        currency,\n        method,\n        tag,\n        exchangeRates: {}\n      };\n      addExpense(expense);\n      this.setState(INITIAL_STATE);\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n      const json = await (response === null || response === void 0 ? void 0 : response.json());\n\n      if (json) {\n        console.log(json);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    const {\n      currencies\n    } = this.props;\n    const {\n      handleChange,\n      addExpenseFunc\n    } = this;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"value-input\",\n      id: \"value-input\",\n      value: value,\n      onChange: handleChange,\n      name: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"description-input\",\n      id: \"description-input\",\n      value: description,\n      onChange: handleChange,\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currencies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"currencies\",\n      value: currency,\n      onChange: handleChange,\n      name: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, currencies.map(cur => /*#__PURE__*/React.createElement(\"option\", {\n      key: cur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 38\n      }\n    }, cur)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, \"Met\\xF3do de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"method-input\",\n      \"data-testid\": \"method-input\",\n      value: method,\n      onChange: handleChange,\n      name: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"Tag:\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"tag-input\",\n      \"data-testid\": \"tag-input\",\n      value: tag,\n      onChange: handleChange,\n      name: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: addExpenseFunc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, \"Adicionar Despesa\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addExpense: expense => dispatch(saveExpense(expense))\n});\n\nExpenseForm.propTypes = {\n  currencies: propTypes.arrayOf(string),\n  addExpense: propTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);","map":{"version":3,"names":["React","connect","propTypes","string","saveExpense","INITIAL_STATE","value","description","currency","method","tag","ExpenseForm","Component","state","handleChange","target","type","checked","setState","name","addExpenseFunc","addExpense","expenses","props","expense","id","length","exchangeRates","componentDidMount","response","fetch","json","console","log","error","render","currencies","map","cur","mapStateToProps","wallet","mapDispatchToProps","dispatch","arrayOf","func","isRequired"],"sources":["/home/portuga/trybe-projetos/sd-021-b-project-trybewallet/src/components/ExpenseForm.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes, { string } from 'prop-types';\nimport { saveExpense } from '../actions';\n\nconst INITIAL_STATE = {\n  value: '',\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação',\n};\n\nclass ExpenseForm extends React.Component {\n  state = INITIAL_STATE;\n\n  handleChange = ({ target }) => {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [target.name]: value,\n    });\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n      const json = await response?.json();\n      if (json) {\n        console.log(json);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  addExpenseFunc = () => {\n    const { addExpense, expenses } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n\n    const expense = {\n      id: expenses.length,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates: {},\n    };\n    addExpense(expense);\n\n    this.setState(INITIAL_STATE);\n  }\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    const { currencies } = this.props;\n    const { handleChange, addExpenseFunc } = this;\n    return (\n      <form>\n        <label htmlFor=\"value-input\">\n          Valor:\n          <input\n            type=\"text\"\n            data-testid=\"value-input\"\n            id=\"value-input\"\n            value={ value }\n            onChange={ handleChange }\n            name=\"value\"\n          />\n        </label>\n\n        <label htmlFor=\"description-input\">\n          Descrição:\n          <input\n            type=\"text\"\n            data-testid=\"description-input\"\n            id=\"description-input\"\n            value={ description }\n            onChange={ handleChange }\n            name=\"description\"\n          />\n        </label>\n\n        <label htmlFor=\"currencies\">\n          Moeda:\n          <select\n            id=\"currencies\"\n            value={ currency }\n            onChange={ handleChange }\n            name=\"currency\"\n          >\n            {currencies.map((cur) => <option key={ cur }>{cur}</option>)}\n          </select>\n        </label>\n\n        <label htmlFor=\"method-input\">\n          Metódo de pagamento:\n          <select\n            id=\"method-input\"\n            data-testid=\"method-input\"\n            value={ method }\n            onChange={ handleChange }\n            name=\"method\"\n          >\n            <option>Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"tag-input\">\n          Tag:\n          <select\n            id=\"tag-input\"\n            data-testid=\"tag-input\"\n            value={ tag }\n            onChange={ handleChange }\n            name=\"tag\"\n          >\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n        </label>\n\n        <button\n          type=\"button\"\n          onClick={ addExpenseFunc }\n        >\n          Adicionar Despesa\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addExpense: (expense) => dispatch(saveExpense(expense)),\n});\n\nExpenseForm.propTypes = {\n  currencies: propTypes.arrayOf(string),\n  addExpense: propTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}