{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.applyMiddleware = exports.commandMiddlewareFactory = exports.globalMiddlewareFactory = void 0;\n\nconst argsert_1 = require(\"./argsert\");\n\nconst is_promise_1 = require(\"./is-promise\");\n\nfunction globalMiddlewareFactory(globalMiddleware, context) {\n  return function (callback) {\n    let applyBeforeValidation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    argsert_1.argsert('<array|function> [boolean]', [callback, applyBeforeValidation], arguments.length);\n\n    if (Array.isArray(callback)) {\n      for (let i = 0; i < callback.length; i++) {\n        if (typeof callback[i] !== 'function') {\n          throw Error('middleware must be a function');\n        }\n\n        callback[i].applyBeforeValidation = applyBeforeValidation;\n      }\n\n      Array.prototype.push.apply(globalMiddleware, callback);\n    } else if (typeof callback === 'function') {\n      callback.applyBeforeValidation = applyBeforeValidation;\n      globalMiddleware.push(callback);\n    }\n\n    return context;\n  };\n}\n\nexports.globalMiddlewareFactory = globalMiddlewareFactory;\n\nfunction commandMiddlewareFactory(commandMiddleware) {\n  if (!commandMiddleware) return [];\n  return commandMiddleware.map(middleware => {\n    middleware.applyBeforeValidation = false;\n    return middleware;\n  });\n}\n\nexports.commandMiddlewareFactory = commandMiddlewareFactory;\n\nfunction applyMiddleware(argv, yargs, middlewares, beforeValidation) {\n  const beforeValidationError = new Error('middleware cannot return a promise when applyBeforeValidation is true');\n  return middlewares.reduce((acc, middleware) => {\n    if (middleware.applyBeforeValidation !== beforeValidation) {\n      return acc;\n    }\n\n    if (is_promise_1.isPromise(acc)) {\n      return acc.then(initialObj => Promise.all([initialObj, middleware(initialObj, yargs)])).then(_ref => {\n        let [initialObj, middlewareObj] = _ref;\n        return Object.assign(initialObj, middlewareObj);\n      });\n    } else {\n      const result = middleware(acc, yargs);\n      if (beforeValidation && is_promise_1.isPromise(result)) throw beforeValidationError;\n      return is_promise_1.isPromise(result) ? result.then(middlewareObj => Object.assign(acc, middlewareObj)) : Object.assign(acc, result);\n    }\n  }, argv);\n}\n\nexports.applyMiddleware = applyMiddleware;","map":{"version":3,"names":["Object","defineProperty","exports","value","applyMiddleware","commandMiddlewareFactory","globalMiddlewareFactory","argsert_1","require","is_promise_1","globalMiddleware","context","callback","applyBeforeValidation","argsert","arguments","length","Array","isArray","i","Error","prototype","push","apply","commandMiddleware","map","middleware","argv","yargs","middlewares","beforeValidation","beforeValidationError","reduce","acc","isPromise","then","initialObj","Promise","all","middlewareObj","assign","result"],"sources":["/home/portuga/trybe-projetos/sd-021-b-project-trybewallet/node_modules/yargs/build/lib/middleware.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyMiddleware = exports.commandMiddlewareFactory = exports.globalMiddlewareFactory = void 0;\nconst argsert_1 = require(\"./argsert\");\nconst is_promise_1 = require(\"./is-promise\");\nfunction globalMiddlewareFactory(globalMiddleware, context) {\n    return function (callback, applyBeforeValidation = false) {\n        argsert_1.argsert('<array|function> [boolean]', [callback, applyBeforeValidation], arguments.length);\n        if (Array.isArray(callback)) {\n            for (let i = 0; i < callback.length; i++) {\n                if (typeof callback[i] !== 'function') {\n                    throw Error('middleware must be a function');\n                }\n                callback[i].applyBeforeValidation = applyBeforeValidation;\n            }\n            Array.prototype.push.apply(globalMiddleware, callback);\n        }\n        else if (typeof callback === 'function') {\n            callback.applyBeforeValidation = applyBeforeValidation;\n            globalMiddleware.push(callback);\n        }\n        return context;\n    };\n}\nexports.globalMiddlewareFactory = globalMiddlewareFactory;\nfunction commandMiddlewareFactory(commandMiddleware) {\n    if (!commandMiddleware)\n        return [];\n    return commandMiddleware.map(middleware => {\n        middleware.applyBeforeValidation = false;\n        return middleware;\n    });\n}\nexports.commandMiddlewareFactory = commandMiddlewareFactory;\nfunction applyMiddleware(argv, yargs, middlewares, beforeValidation) {\n    const beforeValidationError = new Error('middleware cannot return a promise when applyBeforeValidation is true');\n    return middlewares\n        .reduce((acc, middleware) => {\n        if (middleware.applyBeforeValidation !== beforeValidation) {\n            return acc;\n        }\n        if (is_promise_1.isPromise(acc)) {\n            return acc\n                .then(initialObj => Promise.all([initialObj, middleware(initialObj, yargs)]))\n                .then(([initialObj, middlewareObj]) => Object.assign(initialObj, middlewareObj));\n        }\n        else {\n            const result = middleware(acc, yargs);\n            if (beforeValidation && is_promise_1.isPromise(result))\n                throw beforeValidationError;\n            return is_promise_1.isPromise(result)\n                ? result.then(middlewareObj => Object.assign(acc, middlewareObj))\n                : Object.assign(acc, result);\n        }\n    }, argv);\n}\nexports.applyMiddleware = applyMiddleware;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}