{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usage = void 0; // this file handles outputting usage instructions,\n// failures, etc. keeps logging in one place.\n\nconst common_types_1 = require(\"./common-types\");\n\nconst obj_filter_1 = require(\"./obj-filter\");\n\nconst path = require(\"path\");\n\nconst yerror_1 = require(\"./yerror\");\n\nconst decamelize = require(\"decamelize\");\n\nconst setBlocking = require(\"set-blocking\");\n\nconst stringWidth = require(\"string-width\");\n\nfunction usage(yargs, y18n) {\n  const __ = y18n.__;\n  const self = {}; // methods for ouputting/building failure message.\n\n  const fails = [];\n\n  self.failFn = function failFn(f) {\n    fails.push(f);\n  };\n\n  let failMessage = null;\n  let showHelpOnFail = true;\n\n  self.showHelpOnFail = function showHelpOnFailFn() {\n    let arg1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    let arg2 = arguments.length > 1 ? arguments[1] : undefined;\n\n    function parseFunctionArgs() {\n      return typeof arg1 === 'string' ? [true, arg1] : [arg1, arg2];\n    }\n\n    const [enabled, message] = parseFunctionArgs();\n    failMessage = message;\n    showHelpOnFail = enabled;\n    return self;\n  };\n\n  let failureOutput = false;\n\n  self.fail = function fail(msg, err) {\n    const logger = yargs._getLoggerInstance();\n\n    if (fails.length) {\n      for (let i = fails.length - 1; i >= 0; --i) {\n        fails[i](msg, err, self);\n      }\n    } else {\n      if (yargs.getExitProcess()) setBlocking(true); // don't output failure message more than once\n\n      if (!failureOutput) {\n        failureOutput = true;\n\n        if (showHelpOnFail) {\n          yargs.showHelp('error');\n          logger.error();\n        }\n\n        if (msg || err) logger.error(msg || err);\n\n        if (failMessage) {\n          if (msg || err) logger.error('');\n          logger.error(failMessage);\n        }\n      }\n\n      err = err || new yerror_1.YError(msg);\n\n      if (yargs.getExitProcess()) {\n        return yargs.exit(1);\n      } else if (yargs._hasParseCallback()) {\n        return yargs.exit(1, err);\n      } else {\n        throw err;\n      }\n    }\n  }; // methods for ouputting/building help (usage) message.\n\n\n  let usages = [];\n  let usageDisabled = false;\n\n  self.usage = (msg, description) => {\n    if (msg === null) {\n      usageDisabled = true;\n      usages = [];\n      return self;\n    }\n\n    usageDisabled = false;\n    usages.push([msg, description || '']);\n    return self;\n  };\n\n  self.getUsage = () => {\n    return usages;\n  };\n\n  self.getUsageDisabled = () => {\n    return usageDisabled;\n  };\n\n  self.getPositionalGroupName = () => {\n    return __('Positionals:');\n  };\n\n  let examples = [];\n\n  self.example = (cmd, description) => {\n    examples.push([cmd, description || '']);\n  };\n\n  let commands = [];\n\n  self.command = function command(cmd, description, isDefault, aliases) {\n    let deprecated = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    // the last default wins, so cancel out any previously set default\n    if (isDefault) {\n      commands = commands.map(cmdArray => {\n        cmdArray[2] = false;\n        return cmdArray;\n      });\n    }\n\n    commands.push([cmd, description || '', isDefault, aliases, deprecated]);\n  };\n\n  self.getCommands = () => commands;\n\n  let descriptions = {};\n\n  self.describe = function describe(keyOrKeys, desc) {\n    if (Array.isArray(keyOrKeys)) {\n      keyOrKeys.forEach(k => {\n        self.describe(k, desc);\n      });\n    } else if (typeof keyOrKeys === 'object') {\n      Object.keys(keyOrKeys).forEach(k => {\n        self.describe(k, keyOrKeys[k]);\n      });\n    } else {\n      descriptions[keyOrKeys] = desc;\n    }\n  };\n\n  self.getDescriptions = () => descriptions;\n\n  let epilogs = [];\n\n  self.epilog = msg => {\n    epilogs.push(msg);\n  };\n\n  let wrapSet = false;\n  let wrap;\n\n  self.wrap = cols => {\n    wrapSet = true;\n    wrap = cols;\n  };\n\n  function getWrap() {\n    if (!wrapSet) {\n      wrap = windowWidth();\n      wrapSet = true;\n    }\n\n    return wrap;\n  }\n\n  const deferY18nLookupPrefix = '__yargsString__:';\n\n  self.deferY18nLookup = str => deferY18nLookupPrefix + str;\n\n  self.help = function help() {\n    if (cachedHelpMessage) return cachedHelpMessage;\n    normalizeAliases(); // handle old demanded API\n\n    const base$0 = yargs.customScriptName ? yargs.$0 : path.basename(yargs.$0);\n    const demandedOptions = yargs.getDemandedOptions();\n    const demandedCommands = yargs.getDemandedCommands();\n    const deprecatedOptions = yargs.getDeprecatedOptions();\n    const groups = yargs.getGroups();\n    const options = yargs.getOptions();\n    let keys = [];\n    keys = keys.concat(Object.keys(descriptions));\n    keys = keys.concat(Object.keys(demandedOptions));\n    keys = keys.concat(Object.keys(demandedCommands));\n    keys = keys.concat(Object.keys(options.default));\n    keys = keys.filter(filterHiddenOptions);\n    keys = Object.keys(keys.reduce((acc, key) => {\n      if (key !== '_') acc[key] = true;\n      return acc;\n    }, {}));\n    const theWrap = getWrap();\n\n    const ui = require('cliui')({\n      width: theWrap,\n      wrap: !!theWrap\n    }); // the usage string.\n\n\n    if (!usageDisabled) {\n      if (usages.length) {\n        // user-defined usage.\n        usages.forEach(usage => {\n          ui.div(`${usage[0].replace(/\\$0/g, base$0)}`);\n\n          if (usage[1]) {\n            ui.div({\n              text: `${usage[1]}`,\n              padding: [1, 0, 0, 0]\n            });\n          }\n        });\n        ui.div();\n      } else if (commands.length) {\n        let u = null; // demonstrate how commands are used.\n\n        if (demandedCommands._) {\n          u = `${base$0} <${__('command')}>\\n`;\n        } else {\n          u = `${base$0} [${__('command')}]\\n`;\n        }\n\n        ui.div(`${u}`);\n      }\n    } // your application's commands, i.e., non-option\n    // arguments populated in '_'.\n\n\n    if (commands.length) {\n      ui.div(__('Commands:'));\n      const context = yargs.getContext();\n      const parentCommands = context.commands.length ? `${context.commands.join(' ')} ` : '';\n\n      if (yargs.getParserConfiguration()['sort-commands'] === true) {\n        commands = commands.sort((a, b) => a[0].localeCompare(b[0]));\n      }\n\n      commands.forEach(command => {\n        const commandString = `${base$0} ${parentCommands}${command[0].replace(/^\\$0 ?/, '')}`; // drop $0 from default commands.\n\n        ui.span({\n          text: commandString,\n          padding: [0, 2, 0, 2],\n          width: maxWidth(commands, theWrap, `${base$0}${parentCommands}`) + 4\n        }, {\n          text: command[1]\n        });\n        const hints = [];\n        if (command[2]) hints.push(`[${__('default')}]`);\n\n        if (command[3] && command[3].length) {\n          hints.push(`[${__('aliases:')} ${command[3].join(', ')}]`);\n        }\n\n        if (command[4]) {\n          if (typeof command[4] === 'string') {\n            hints.push(`[${__('deprecated: %s', command[4])}]`);\n          } else {\n            hints.push(`[${__('deprecated')}]`);\n          }\n        }\n\n        if (hints.length) {\n          ui.div({\n            text: hints.join(' '),\n            padding: [0, 0, 0, 2],\n            align: 'right'\n          });\n        } else {\n          ui.div();\n        }\n      });\n      ui.div();\n    } // perform some cleanup on the keys array, making it\n    // only include top-level keys not their aliases.\n\n\n    const aliasKeys = (Object.keys(options.alias) || []).concat(Object.keys(yargs.parsed.newAliases) || []);\n    keys = keys.filter(key => !yargs.parsed.newAliases[key] && aliasKeys.every(alias => (options.alias[alias] || []).indexOf(key) === -1)); // populate 'Options:' group with any keys that have not\n    // explicitly had a group set.\n\n    const defaultGroup = __('Options:');\n\n    if (!groups[defaultGroup]) groups[defaultGroup] = [];\n    addUngroupedKeys(keys, options.alias, groups, defaultGroup); // display 'Options:' table along with any custom tables:\n\n    Object.keys(groups).forEach(groupName => {\n      if (!groups[groupName].length) return; // if we've grouped the key 'f', but 'f' aliases 'foobar',\n      // normalizedKeys should contain only 'foobar'.\n\n      const normalizedKeys = groups[groupName].filter(filterHiddenOptions).map(key => {\n        if (~aliasKeys.indexOf(key)) return key;\n\n        for (let i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n          if (~(options.alias[aliasKey] || []).indexOf(key)) return aliasKey;\n        }\n\n        return key;\n      });\n      if (normalizedKeys.length < 1) return;\n      ui.div(groupName); // actually generate the switches string --foo, -f, --bar.\n\n      const switches = normalizedKeys.reduce((acc, key) => {\n        acc[key] = [key].concat(options.alias[key] || []).map(sw => {\n          // for the special positional group don't\n          // add '--' or '-' prefix.\n          if (groupName === self.getPositionalGroupName()) return sw;else {\n            return ( // matches yargs-parser logic in which single-digits\n            // aliases declared with a boolean type are now valid\n            /^[0-9]$/.test(sw) ? ~options.boolean.indexOf(key) ? '-' : '--' : sw.length > 1 ? '--' : '-') + sw;\n          }\n        }).join(', ');\n        return acc;\n      }, {});\n      normalizedKeys.forEach(key => {\n        const kswitch = switches[key];\n        let desc = descriptions[key] || '';\n        let type = null;\n        if (~desc.lastIndexOf(deferY18nLookupPrefix)) desc = __(desc.substring(deferY18nLookupPrefix.length));\n        if (~options.boolean.indexOf(key)) type = `[${__('boolean')}]`;\n        if (~options.count.indexOf(key)) type = `[${__('count')}]`;\n        if (~options.string.indexOf(key)) type = `[${__('string')}]`;\n        if (~options.normalize.indexOf(key)) type = `[${__('string')}]`;\n        if (~options.array.indexOf(key)) type = `[${__('array')}]`;\n        if (~options.number.indexOf(key)) type = `[${__('number')}]`;\n\n        const deprecatedExtra = deprecated => typeof deprecated === 'string' ? `[${__('deprecated: %s', deprecated)}]` : `[${__('deprecated')}]`;\n\n        const extra = [key in deprecatedOptions ? deprecatedExtra(deprecatedOptions[key]) : null, type, key in demandedOptions ? `[${__('required')}]` : null, options.choices && options.choices[key] ? `[${__('choices:')} ${self.stringifiedValues(options.choices[key])}]` : null, defaultString(options.default[key], options.defaultDescription[key])].filter(Boolean).join(' ');\n        ui.span({\n          text: kswitch,\n          padding: [0, 2, 0, 2],\n          width: maxWidth(switches, theWrap) + 4\n        }, desc);\n        if (extra) ui.div({\n          text: extra,\n          padding: [0, 0, 0, 2],\n          align: 'right'\n        });else ui.div();\n      });\n      ui.div();\n    }); // describe some common use-cases for your application.\n\n    if (examples.length) {\n      ui.div(__('Examples:'));\n      examples.forEach(example => {\n        example[0] = example[0].replace(/\\$0/g, base$0);\n      });\n      examples.forEach(example => {\n        if (example[1] === '') {\n          ui.div({\n            text: example[0],\n            padding: [0, 2, 0, 2]\n          });\n        } else {\n          ui.div({\n            text: example[0],\n            padding: [0, 2, 0, 2],\n            width: maxWidth(examples, theWrap) + 4\n          }, {\n            text: example[1]\n          });\n        }\n      });\n      ui.div();\n    } // the usage string.\n\n\n    if (epilogs.length > 0) {\n      const e = epilogs.map(epilog => epilog.replace(/\\$0/g, base$0)).join('\\n');\n      ui.div(`${e}\\n`);\n    } // Remove the trailing white spaces\n\n\n    return ui.toString().replace(/\\s*$/, '');\n  }; // return the maximum width of a string\n  // in the left-hand column of a table.\n\n\n  function maxWidth(table, theWrap, modifier) {\n    let width = 0; // table might be of the form [leftColumn],\n    // or {key: leftColumn}\n\n    if (!Array.isArray(table)) {\n      table = Object.values(table).map(v => [v]);\n    }\n\n    table.forEach(v => {\n      width = Math.max(stringWidth(modifier ? `${modifier} ${v[0]}` : v[0]), width);\n    }); // if we've enabled 'wrap' we should limit\n    // the max-width of the left-column.\n\n    if (theWrap) width = Math.min(width, parseInt((theWrap * 0.5).toString(), 10));\n    return width;\n  } // make sure any options set for aliases,\n  // are copied to the keys being aliased.\n\n\n  function normalizeAliases() {\n    // handle old demanded API\n    const demandedOptions = yargs.getDemandedOptions();\n    const options = yargs.getOptions();\n    (Object.keys(options.alias) || []).forEach(key => {\n      options.alias[key].forEach(alias => {\n        // copy descriptions.\n        if (descriptions[alias]) self.describe(key, descriptions[alias]); // copy demanded.\n\n        if (alias in demandedOptions) yargs.demandOption(key, demandedOptions[alias]); // type messages.\n\n        if (~options.boolean.indexOf(alias)) yargs.boolean(key);\n        if (~options.count.indexOf(alias)) yargs.count(key);\n        if (~options.string.indexOf(alias)) yargs.string(key);\n        if (~options.normalize.indexOf(alias)) yargs.normalize(key);\n        if (~options.array.indexOf(alias)) yargs.array(key);\n        if (~options.number.indexOf(alias)) yargs.number(key);\n      });\n    });\n  } // if yargs is executing an async handler, we take a snapshot of the\n  // help message to display on failure:\n\n\n  let cachedHelpMessage;\n\n  self.cacheHelpMessage = function () {\n    cachedHelpMessage = this.help();\n  }; // however this snapshot must be cleared afterwards\n  // not to be be used by next calls to parse\n\n\n  self.clearCachedHelpMessage = function () {\n    cachedHelpMessage = undefined;\n  }; // given a set of keys, place any keys that are\n  // ungrouped under the 'Options:' grouping.\n\n\n  function addUngroupedKeys(keys, aliases, groups, defaultGroup) {\n    let groupedKeys = [];\n    let toCheck = null;\n    Object.keys(groups).forEach(group => {\n      groupedKeys = groupedKeys.concat(groups[group]);\n    });\n    keys.forEach(key => {\n      toCheck = [key].concat(aliases[key]);\n\n      if (!toCheck.some(k => groupedKeys.indexOf(k) !== -1)) {\n        groups[defaultGroup].push(key);\n      }\n    });\n    return groupedKeys;\n  }\n\n  function filterHiddenOptions(key) {\n    return yargs.getOptions().hiddenOptions.indexOf(key) < 0 || yargs.parsed.argv[yargs.getOptions().showHiddenOpt];\n  }\n\n  self.showHelp = level => {\n    const logger = yargs._getLoggerInstance();\n\n    if (!level) level = 'error';\n    const emit = typeof level === 'function' ? level : logger[level];\n    emit(self.help());\n  };\n\n  self.functionDescription = fn => {\n    const description = fn.name ? decamelize(fn.name, '-') : __('generated-value');\n    return ['(', description, ')'].join('');\n  };\n\n  self.stringifiedValues = function stringifiedValues(values, separator) {\n    let string = '';\n    const sep = separator || ', ';\n    const array = [].concat(values);\n    if (!values || !array.length) return string;\n    array.forEach(value => {\n      if (string.length) string += sep;\n      string += JSON.stringify(value);\n    });\n    return string;\n  }; // format the default-value-string displayed in\n  // the right-hand column.\n\n\n  function defaultString(value, defaultDescription) {\n    let string = `[${__('default:')} `;\n    if (value === undefined && !defaultDescription) return null;\n\n    if (defaultDescription) {\n      string += defaultDescription;\n    } else {\n      switch (typeof value) {\n        case 'string':\n          string += `\"${value}\"`;\n          break;\n\n        case 'object':\n          string += JSON.stringify(value);\n          break;\n\n        default:\n          string += value;\n      }\n    }\n\n    return `${string}]`;\n  } // guess the width of the console window, max-width 80.\n\n\n  function windowWidth() {\n    const maxWidth = 80; // CI is not a TTY\n\n    /* c8 ignore next 2 */\n\n    if (typeof process === 'object' && process.stdout && process.stdout.columns) {\n      return Math.min(maxWidth, process.stdout.columns);\n    } else {\n      return maxWidth;\n    }\n  } // logic for displaying application version.\n\n\n  let version = null;\n\n  self.version = ver => {\n    version = ver;\n  };\n\n  self.showVersion = () => {\n    const logger = yargs._getLoggerInstance();\n\n    logger.log(version);\n  };\n\n  self.reset = function reset(localLookup) {\n    // do not reset wrap here\n    // do not reset fails here\n    failMessage = null;\n    failureOutput = false;\n    usages = [];\n    usageDisabled = false;\n    epilogs = [];\n    examples = [];\n    commands = [];\n    descriptions = obj_filter_1.objFilter(descriptions, k => !localLookup[k]);\n    return self;\n  };\n\n  const frozens = [];\n\n  self.freeze = function freeze() {\n    frozens.push({\n      failMessage,\n      failureOutput,\n      usages,\n      usageDisabled,\n      epilogs,\n      examples,\n      commands,\n      descriptions\n    });\n  };\n\n  self.unfreeze = function unfreeze() {\n    const frozen = frozens.pop();\n    common_types_1.assertNotStrictEqual(frozen, undefined);\n    ({\n      failMessage,\n      failureOutput,\n      usages,\n      usageDisabled,\n      epilogs,\n      examples,\n      commands,\n      descriptions\n    } = frozen);\n  };\n\n  return self;\n}\n\nexports.usage = usage;","map":{"version":3,"names":["Object","defineProperty","exports","value","usage","common_types_1","require","obj_filter_1","path","yerror_1","decamelize","setBlocking","stringWidth","yargs","y18n","__","self","fails","failFn","f","push","failMessage","showHelpOnFail","showHelpOnFailFn","arg1","arg2","parseFunctionArgs","enabled","message","failureOutput","fail","msg","err","logger","_getLoggerInstance","length","i","getExitProcess","showHelp","error","YError","exit","_hasParseCallback","usages","usageDisabled","description","getUsage","getUsageDisabled","getPositionalGroupName","examples","example","cmd","commands","command","isDefault","aliases","deprecated","map","cmdArray","getCommands","descriptions","describe","keyOrKeys","desc","Array","isArray","forEach","k","keys","getDescriptions","epilogs","epilog","wrapSet","wrap","cols","getWrap","windowWidth","deferY18nLookupPrefix","deferY18nLookup","str","help","cachedHelpMessage","normalizeAliases","base$0","customScriptName","$0","basename","demandedOptions","getDemandedOptions","demandedCommands","getDemandedCommands","deprecatedOptions","getDeprecatedOptions","groups","getGroups","options","getOptions","concat","default","filter","filterHiddenOptions","reduce","acc","key","theWrap","ui","width","div","replace","text","padding","u","_","context","getContext","parentCommands","join","getParserConfiguration","sort","a","b","localeCompare","commandString","span","maxWidth","hints","align","aliasKeys","alias","parsed","newAliases","every","indexOf","defaultGroup","addUngroupedKeys","groupName","normalizedKeys","aliasKey","undefined","switches","sw","test","boolean","kswitch","type","lastIndexOf","substring","count","string","normalize","array","number","deprecatedExtra","extra","choices","stringifiedValues","defaultString","defaultDescription","Boolean","e","toString","table","modifier","values","v","Math","max","min","parseInt","demandOption","cacheHelpMessage","clearCachedHelpMessage","groupedKeys","toCheck","group","some","hiddenOptions","argv","showHiddenOpt","level","emit","functionDescription","fn","name","separator","sep","JSON","stringify","process","stdout","columns","version","ver","showVersion","log","reset","localLookup","objFilter","frozens","freeze","unfreeze","frozen","pop","assertNotStrictEqual"],"sources":["/home/portuga/trybe-projetos/sd-021-b-project-trybewallet/node_modules/yargs/build/lib/usage.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.usage = void 0;\n// this file handles outputting usage instructions,\n// failures, etc. keeps logging in one place.\nconst common_types_1 = require(\"./common-types\");\nconst obj_filter_1 = require(\"./obj-filter\");\nconst path = require(\"path\");\nconst yerror_1 = require(\"./yerror\");\nconst decamelize = require(\"decamelize\");\nconst setBlocking = require(\"set-blocking\");\nconst stringWidth = require(\"string-width\");\nfunction usage(yargs, y18n) {\n    const __ = y18n.__;\n    const self = {};\n    // methods for ouputting/building failure message.\n    const fails = [];\n    self.failFn = function failFn(f) {\n        fails.push(f);\n    };\n    let failMessage = null;\n    let showHelpOnFail = true;\n    self.showHelpOnFail = function showHelpOnFailFn(arg1 = true, arg2) {\n        function parseFunctionArgs() {\n            return typeof arg1 === 'string' ? [true, arg1] : [arg1, arg2];\n        }\n        const [enabled, message] = parseFunctionArgs();\n        failMessage = message;\n        showHelpOnFail = enabled;\n        return self;\n    };\n    let failureOutput = false;\n    self.fail = function fail(msg, err) {\n        const logger = yargs._getLoggerInstance();\n        if (fails.length) {\n            for (let i = fails.length - 1; i >= 0; --i) {\n                fails[i](msg, err, self);\n            }\n        }\n        else {\n            if (yargs.getExitProcess())\n                setBlocking(true);\n            // don't output failure message more than once\n            if (!failureOutput) {\n                failureOutput = true;\n                if (showHelpOnFail) {\n                    yargs.showHelp('error');\n                    logger.error();\n                }\n                if (msg || err)\n                    logger.error(msg || err);\n                if (failMessage) {\n                    if (msg || err)\n                        logger.error('');\n                    logger.error(failMessage);\n                }\n            }\n            err = err || new yerror_1.YError(msg);\n            if (yargs.getExitProcess()) {\n                return yargs.exit(1);\n            }\n            else if (yargs._hasParseCallback()) {\n                return yargs.exit(1, err);\n            }\n            else {\n                throw err;\n            }\n        }\n    };\n    // methods for ouputting/building help (usage) message.\n    let usages = [];\n    let usageDisabled = false;\n    self.usage = (msg, description) => {\n        if (msg === null) {\n            usageDisabled = true;\n            usages = [];\n            return self;\n        }\n        usageDisabled = false;\n        usages.push([msg, description || '']);\n        return self;\n    };\n    self.getUsage = () => {\n        return usages;\n    };\n    self.getUsageDisabled = () => {\n        return usageDisabled;\n    };\n    self.getPositionalGroupName = () => {\n        return __('Positionals:');\n    };\n    let examples = [];\n    self.example = (cmd, description) => {\n        examples.push([cmd, description || '']);\n    };\n    let commands = [];\n    self.command = function command(cmd, description, isDefault, aliases, deprecated = false) {\n        // the last default wins, so cancel out any previously set default\n        if (isDefault) {\n            commands = commands.map((cmdArray) => {\n                cmdArray[2] = false;\n                return cmdArray;\n            });\n        }\n        commands.push([cmd, description || '', isDefault, aliases, deprecated]);\n    };\n    self.getCommands = () => commands;\n    let descriptions = {};\n    self.describe = function describe(keyOrKeys, desc) {\n        if (Array.isArray(keyOrKeys)) {\n            keyOrKeys.forEach((k) => {\n                self.describe(k, desc);\n            });\n        }\n        else if (typeof keyOrKeys === 'object') {\n            Object.keys(keyOrKeys).forEach((k) => {\n                self.describe(k, keyOrKeys[k]);\n            });\n        }\n        else {\n            descriptions[keyOrKeys] = desc;\n        }\n    };\n    self.getDescriptions = () => descriptions;\n    let epilogs = [];\n    self.epilog = (msg) => {\n        epilogs.push(msg);\n    };\n    let wrapSet = false;\n    let wrap;\n    self.wrap = (cols) => {\n        wrapSet = true;\n        wrap = cols;\n    };\n    function getWrap() {\n        if (!wrapSet) {\n            wrap = windowWidth();\n            wrapSet = true;\n        }\n        return wrap;\n    }\n    const deferY18nLookupPrefix = '__yargsString__:';\n    self.deferY18nLookup = str => deferY18nLookupPrefix + str;\n    self.help = function help() {\n        if (cachedHelpMessage)\n            return cachedHelpMessage;\n        normalizeAliases();\n        // handle old demanded API\n        const base$0 = yargs.customScriptName ? yargs.$0 : path.basename(yargs.$0);\n        const demandedOptions = yargs.getDemandedOptions();\n        const demandedCommands = yargs.getDemandedCommands();\n        const deprecatedOptions = yargs.getDeprecatedOptions();\n        const groups = yargs.getGroups();\n        const options = yargs.getOptions();\n        let keys = [];\n        keys = keys.concat(Object.keys(descriptions));\n        keys = keys.concat(Object.keys(demandedOptions));\n        keys = keys.concat(Object.keys(demandedCommands));\n        keys = keys.concat(Object.keys(options.default));\n        keys = keys.filter(filterHiddenOptions);\n        keys = Object.keys(keys.reduce((acc, key) => {\n            if (key !== '_')\n                acc[key] = true;\n            return acc;\n        }, {}));\n        const theWrap = getWrap();\n        const ui = require('cliui')({\n            width: theWrap,\n            wrap: !!theWrap\n        });\n        // the usage string.\n        if (!usageDisabled) {\n            if (usages.length) {\n                // user-defined usage.\n                usages.forEach((usage) => {\n                    ui.div(`${usage[0].replace(/\\$0/g, base$0)}`);\n                    if (usage[1]) {\n                        ui.div({ text: `${usage[1]}`, padding: [1, 0, 0, 0] });\n                    }\n                });\n                ui.div();\n            }\n            else if (commands.length) {\n                let u = null;\n                // demonstrate how commands are used.\n                if (demandedCommands._) {\n                    u = `${base$0} <${__('command')}>\\n`;\n                }\n                else {\n                    u = `${base$0} [${__('command')}]\\n`;\n                }\n                ui.div(`${u}`);\n            }\n        }\n        // your application's commands, i.e., non-option\n        // arguments populated in '_'.\n        if (commands.length) {\n            ui.div(__('Commands:'));\n            const context = yargs.getContext();\n            const parentCommands = context.commands.length ? `${context.commands.join(' ')} ` : '';\n            if (yargs.getParserConfiguration()['sort-commands'] === true) {\n                commands = commands.sort((a, b) => a[0].localeCompare(b[0]));\n            }\n            commands.forEach((command) => {\n                const commandString = `${base$0} ${parentCommands}${command[0].replace(/^\\$0 ?/, '')}`; // drop $0 from default commands.\n                ui.span({\n                    text: commandString,\n                    padding: [0, 2, 0, 2],\n                    width: maxWidth(commands, theWrap, `${base$0}${parentCommands}`) + 4\n                }, { text: command[1] });\n                const hints = [];\n                if (command[2])\n                    hints.push(`[${__('default')}]`);\n                if (command[3] && command[3].length) {\n                    hints.push(`[${__('aliases:')} ${command[3].join(', ')}]`);\n                }\n                if (command[4]) {\n                    if (typeof command[4] === 'string') {\n                        hints.push(`[${__('deprecated: %s', command[4])}]`);\n                    }\n                    else {\n                        hints.push(`[${__('deprecated')}]`);\n                    }\n                }\n                if (hints.length) {\n                    ui.div({ text: hints.join(' '), padding: [0, 0, 0, 2], align: 'right' });\n                }\n                else {\n                    ui.div();\n                }\n            });\n            ui.div();\n        }\n        // perform some cleanup on the keys array, making it\n        // only include top-level keys not their aliases.\n        const aliasKeys = (Object.keys(options.alias) || [])\n            .concat(Object.keys(yargs.parsed.newAliases) || []);\n        keys = keys.filter(key => !yargs.parsed.newAliases[key] && aliasKeys.every(alias => (options.alias[alias] || []).indexOf(key) === -1));\n        // populate 'Options:' group with any keys that have not\n        // explicitly had a group set.\n        const defaultGroup = __('Options:');\n        if (!groups[defaultGroup])\n            groups[defaultGroup] = [];\n        addUngroupedKeys(keys, options.alias, groups, defaultGroup);\n        // display 'Options:' table along with any custom tables:\n        Object.keys(groups).forEach((groupName) => {\n            if (!groups[groupName].length)\n                return;\n            // if we've grouped the key 'f', but 'f' aliases 'foobar',\n            // normalizedKeys should contain only 'foobar'.\n            const normalizedKeys = groups[groupName].filter(filterHiddenOptions).map((key) => {\n                if (~aliasKeys.indexOf(key))\n                    return key;\n                for (let i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n                    if (~(options.alias[aliasKey] || []).indexOf(key))\n                        return aliasKey;\n                }\n                return key;\n            });\n            if (normalizedKeys.length < 1)\n                return;\n            ui.div(groupName);\n            // actually generate the switches string --foo, -f, --bar.\n            const switches = normalizedKeys.reduce((acc, key) => {\n                acc[key] = [key].concat(options.alias[key] || [])\n                    .map(sw => {\n                    // for the special positional group don't\n                    // add '--' or '-' prefix.\n                    if (groupName === self.getPositionalGroupName())\n                        return sw;\n                    else {\n                        return (\n                        // matches yargs-parser logic in which single-digits\n                        // aliases declared with a boolean type are now valid\n                        /^[0-9]$/.test(sw)\n                            ? ~options.boolean.indexOf(key) ? '-' : '--'\n                            : sw.length > 1 ? '--' : '-') + sw;\n                    }\n                })\n                    .join(', ');\n                return acc;\n            }, {});\n            normalizedKeys.forEach((key) => {\n                const kswitch = switches[key];\n                let desc = descriptions[key] || '';\n                let type = null;\n                if (~desc.lastIndexOf(deferY18nLookupPrefix))\n                    desc = __(desc.substring(deferY18nLookupPrefix.length));\n                if (~options.boolean.indexOf(key))\n                    type = `[${__('boolean')}]`;\n                if (~options.count.indexOf(key))\n                    type = `[${__('count')}]`;\n                if (~options.string.indexOf(key))\n                    type = `[${__('string')}]`;\n                if (~options.normalize.indexOf(key))\n                    type = `[${__('string')}]`;\n                if (~options.array.indexOf(key))\n                    type = `[${__('array')}]`;\n                if (~options.number.indexOf(key))\n                    type = `[${__('number')}]`;\n                const deprecatedExtra = (deprecated) => typeof deprecated === 'string'\n                    ? `[${__('deprecated: %s', deprecated)}]`\n                    : `[${__('deprecated')}]`;\n                const extra = [\n                    (key in deprecatedOptions) ? deprecatedExtra(deprecatedOptions[key]) : null,\n                    type,\n                    (key in demandedOptions) ? `[${__('required')}]` : null,\n                    options.choices && options.choices[key] ? `[${__('choices:')} ${self.stringifiedValues(options.choices[key])}]` : null,\n                    defaultString(options.default[key], options.defaultDescription[key])\n                ].filter(Boolean).join(' ');\n                ui.span({ text: kswitch, padding: [0, 2, 0, 2], width: maxWidth(switches, theWrap) + 4 }, desc);\n                if (extra)\n                    ui.div({ text: extra, padding: [0, 0, 0, 2], align: 'right' });\n                else\n                    ui.div();\n            });\n            ui.div();\n        });\n        // describe some common use-cases for your application.\n        if (examples.length) {\n            ui.div(__('Examples:'));\n            examples.forEach((example) => {\n                example[0] = example[0].replace(/\\$0/g, base$0);\n            });\n            examples.forEach((example) => {\n                if (example[1] === '') {\n                    ui.div({\n                        text: example[0],\n                        padding: [0, 2, 0, 2]\n                    });\n                }\n                else {\n                    ui.div({\n                        text: example[0],\n                        padding: [0, 2, 0, 2],\n                        width: maxWidth(examples, theWrap) + 4\n                    }, {\n                        text: example[1]\n                    });\n                }\n            });\n            ui.div();\n        }\n        // the usage string.\n        if (epilogs.length > 0) {\n            const e = epilogs.map(epilog => epilog.replace(/\\$0/g, base$0)).join('\\n');\n            ui.div(`${e}\\n`);\n        }\n        // Remove the trailing white spaces\n        return ui.toString().replace(/\\s*$/, '');\n    };\n    // return the maximum width of a string\n    // in the left-hand column of a table.\n    function maxWidth(table, theWrap, modifier) {\n        let width = 0;\n        // table might be of the form [leftColumn],\n        // or {key: leftColumn}\n        if (!Array.isArray(table)) {\n            table = Object.values(table).map(v => [v]);\n        }\n        table.forEach((v) => {\n            width = Math.max(stringWidth(modifier ? `${modifier} ${v[0]}` : v[0]), width);\n        });\n        // if we've enabled 'wrap' we should limit\n        // the max-width of the left-column.\n        if (theWrap)\n            width = Math.min(width, parseInt((theWrap * 0.5).toString(), 10));\n        return width;\n    }\n    // make sure any options set for aliases,\n    // are copied to the keys being aliased.\n    function normalizeAliases() {\n        // handle old demanded API\n        const demandedOptions = yargs.getDemandedOptions();\n        const options = yargs.getOptions();\n        (Object.keys(options.alias) || []).forEach((key) => {\n            options.alias[key].forEach((alias) => {\n                // copy descriptions.\n                if (descriptions[alias])\n                    self.describe(key, descriptions[alias]);\n                // copy demanded.\n                if (alias in demandedOptions)\n                    yargs.demandOption(key, demandedOptions[alias]);\n                // type messages.\n                if (~options.boolean.indexOf(alias))\n                    yargs.boolean(key);\n                if (~options.count.indexOf(alias))\n                    yargs.count(key);\n                if (~options.string.indexOf(alias))\n                    yargs.string(key);\n                if (~options.normalize.indexOf(alias))\n                    yargs.normalize(key);\n                if (~options.array.indexOf(alias))\n                    yargs.array(key);\n                if (~options.number.indexOf(alias))\n                    yargs.number(key);\n            });\n        });\n    }\n    // if yargs is executing an async handler, we take a snapshot of the\n    // help message to display on failure:\n    let cachedHelpMessage;\n    self.cacheHelpMessage = function () {\n        cachedHelpMessage = this.help();\n    };\n    // however this snapshot must be cleared afterwards\n    // not to be be used by next calls to parse\n    self.clearCachedHelpMessage = function () {\n        cachedHelpMessage = undefined;\n    };\n    // given a set of keys, place any keys that are\n    // ungrouped under the 'Options:' grouping.\n    function addUngroupedKeys(keys, aliases, groups, defaultGroup) {\n        let groupedKeys = [];\n        let toCheck = null;\n        Object.keys(groups).forEach((group) => {\n            groupedKeys = groupedKeys.concat(groups[group]);\n        });\n        keys.forEach((key) => {\n            toCheck = [key].concat(aliases[key]);\n            if (!toCheck.some(k => groupedKeys.indexOf(k) !== -1)) {\n                groups[defaultGroup].push(key);\n            }\n        });\n        return groupedKeys;\n    }\n    function filterHiddenOptions(key) {\n        return yargs.getOptions().hiddenOptions.indexOf(key) < 0 || yargs.parsed.argv[yargs.getOptions().showHiddenOpt];\n    }\n    self.showHelp = (level) => {\n        const logger = yargs._getLoggerInstance();\n        if (!level)\n            level = 'error';\n        const emit = typeof level === 'function' ? level : logger[level];\n        emit(self.help());\n    };\n    self.functionDescription = (fn) => {\n        const description = fn.name ? decamelize(fn.name, '-') : __('generated-value');\n        return ['(', description, ')'].join('');\n    };\n    self.stringifiedValues = function stringifiedValues(values, separator) {\n        let string = '';\n        const sep = separator || ', ';\n        const array = [].concat(values);\n        if (!values || !array.length)\n            return string;\n        array.forEach((value) => {\n            if (string.length)\n                string += sep;\n            string += JSON.stringify(value);\n        });\n        return string;\n    };\n    // format the default-value-string displayed in\n    // the right-hand column.\n    function defaultString(value, defaultDescription) {\n        let string = `[${__('default:')} `;\n        if (value === undefined && !defaultDescription)\n            return null;\n        if (defaultDescription) {\n            string += defaultDescription;\n        }\n        else {\n            switch (typeof value) {\n                case 'string':\n                    string += `\"${value}\"`;\n                    break;\n                case 'object':\n                    string += JSON.stringify(value);\n                    break;\n                default:\n                    string += value;\n            }\n        }\n        return `${string}]`;\n    }\n    // guess the width of the console window, max-width 80.\n    function windowWidth() {\n        const maxWidth = 80;\n        // CI is not a TTY\n        /* c8 ignore next 2 */\n        if (typeof process === 'object' && process.stdout && process.stdout.columns) {\n            return Math.min(maxWidth, process.stdout.columns);\n        }\n        else {\n            return maxWidth;\n        }\n    }\n    // logic for displaying application version.\n    let version = null;\n    self.version = (ver) => {\n        version = ver;\n    };\n    self.showVersion = () => {\n        const logger = yargs._getLoggerInstance();\n        logger.log(version);\n    };\n    self.reset = function reset(localLookup) {\n        // do not reset wrap here\n        // do not reset fails here\n        failMessage = null;\n        failureOutput = false;\n        usages = [];\n        usageDisabled = false;\n        epilogs = [];\n        examples = [];\n        commands = [];\n        descriptions = obj_filter_1.objFilter(descriptions, k => !localLookup[k]);\n        return self;\n    };\n    const frozens = [];\n    self.freeze = function freeze() {\n        frozens.push({\n            failMessage,\n            failureOutput,\n            usages,\n            usageDisabled,\n            epilogs,\n            examples,\n            commands,\n            descriptions\n        });\n    };\n    self.unfreeze = function unfreeze() {\n        const frozen = frozens.pop();\n        common_types_1.assertNotStrictEqual(frozen, undefined);\n        ({\n            failMessage,\n            failureOutput,\n            usages,\n            usageDisabled,\n            epilogs,\n            examples,\n            commands,\n            descriptions\n        } = frozen);\n    };\n    return self;\n}\nexports.usage = usage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}