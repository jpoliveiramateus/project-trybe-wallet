{"ast":null,"code":"var _jsxFileName = \"/home/portuga/trybe-projetos/sd-021-b-project-trybewallet/src/components/Header.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { attTotal } from '../actions';\n\nclass Header extends React.Component {\n  componentDidMount() {\n    const {\n      expenses,\n      attTotalAction\n    } = this.props;\n    let total = '0.00';\n    expenses.forEach(expense => {\n      const {\n        exchangeRates,\n        currency\n      } = expense;\n      total = Number(total) + Math.floor(100 * (expense.value * exchangeRates[currency].ask)) / 100;\n    });\n    attTotalAction(total);\n  }\n\n  render() {\n    const {\n      email,\n      total\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"header\", {\n      style: {\n        display: 'flex',\n        gap: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./images/wallet.jpg\",\n      style: {\n        width: '80px'\n      },\n      alt: \"Logo da Carteira\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, email), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, total), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"BRL\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.user.email,\n  total: state.infos.total,\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  attTotalAction: total => dispatch(attTotal(total))\n});\n\nHeader.propTypes = {\n  email: propTypes.string,\n  total: propTypes.number,\n  attTotalAction: propTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"names":["React","connect","propTypes","attTotal","Header","Component","componentDidMount","expenses","attTotalAction","props","total","forEach","expense","exchangeRates","currency","Number","Math","floor","value","ask","render","email","display","gap","width","mapStateToProps","state","user","infos","wallet","mapDispatchToProps","dispatch","string","number","func","isRequired"],"sources":["/home/portuga/trybe-projetos/sd-021-b-project-trybewallet/src/components/Header.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { attTotal } from '../actions';\n\nclass Header extends React.Component {\n  componentDidMount() {\n    const { expenses, attTotalAction } = this.props;\n    let total = '0.00';\n    expenses.forEach((expense) => {\n      const { exchangeRates, currency } = expense;\n      total = Number(total)\n      + (Math.floor(100 * (expense.value * exchangeRates[currency].ask)) / 100);\n    });\n    attTotalAction(total);\n  }\n\n  render() {\n    const { email, total } = this.props;\n    return (\n      <header style={ { display: 'flex', gap: '10px' } }>\n        <img\n          src=\"./images/wallet.jpg\"\n          style={ { width: '80px' } }\n          alt=\"Logo da Carteira\"\n        />\n        <span data-testid=\"email-field\">{email}</span>\n        <span data-testid=\"total-field\">{total}</span>\n        <span data-testid=\"header-currency-field\">BRL</span>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  total: state.infos.total,\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  attTotalAction: (total) => dispatch(attTotal(total)),\n});\n\nHeader.propTypes = {\n  email: propTypes.string,\n  total: propTypes.number,\n  attTotalAction: propTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;EACnCC,iBAAiB,GAAG;IAClB,MAAM;MAAEC,QAAF;MAAYC;IAAZ,IAA+B,KAAKC,KAA1C;IACA,IAAIC,KAAK,GAAG,MAAZ;IACAH,QAAQ,CAACI,OAAT,CAAkBC,OAAD,IAAa;MAC5B,MAAM;QAAEC,aAAF;QAAiBC;MAAjB,IAA8BF,OAApC;MACAF,KAAK,GAAGK,MAAM,CAACL,KAAD,CAAN,GACLM,IAAI,CAACC,KAAL,CAAW,OAAOL,OAAO,CAACM,KAAR,GAAgBL,aAAa,CAACC,QAAD,CAAb,CAAwBK,GAA/C,CAAX,IAAkE,GADrE;IAED,CAJD;IAKAX,cAAc,CAACE,KAAD,CAAd;EACD;;EAEDU,MAAM,GAAG;IACP,MAAM;MAAEC,KAAF;MAASX;IAAT,IAAmB,KAAKD,KAA9B;IACA,oBACE;MAAQ,KAAK,EAAG;QAAEa,OAAO,EAAE,MAAX;QAAmBC,GAAG,EAAE;MAAxB,CAAhB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MACE,GAAG,EAAC,qBADN;MAEE,KAAK,EAAG;QAAEC,KAAK,EAAE;MAAT,CAFV;MAGE,GAAG,EAAC,kBAHN;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,eAME;MAAM,eAAY,aAAlB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAiCH,KAAjC,CANF,eAOE;MAAM,eAAY,aAAlB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAiCX,KAAjC,CAPF,eAQE;MAAM,eAAY,uBAAlB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,SARF,CADF;EAYD;;AA1BkC;;AA6BrC,MAAMe,eAAe,GAAIC,KAAD,KAAY;EAClCL,KAAK,EAAEK,KAAK,CAACC,IAAN,CAAWN,KADgB;EAElCX,KAAK,EAAEgB,KAAK,CAACE,KAAN,CAAYlB,KAFe;EAGlCH,QAAQ,EAAEmB,KAAK,CAACG,MAAN,CAAatB;AAHW,CAAZ,CAAxB;;AAMA,MAAMuB,kBAAkB,GAAIC,QAAD,KAAe;EACxCvB,cAAc,EAAGE,KAAD,IAAWqB,QAAQ,CAAC5B,QAAQ,CAACO,KAAD,CAAT;AADK,CAAf,CAA3B;;AAIAN,MAAM,CAACF,SAAP,GAAmB;EACjBmB,KAAK,EAAEnB,SAAS,CAAC8B,MADA;EAEjBtB,KAAK,EAAER,SAAS,CAAC+B,MAFA;EAGjBzB,cAAc,EAAEN,SAAS,CAACgC;AAHT,EAIjBC,UAJF;AAMA,eAAelC,OAAO,CAACwB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6C1B,MAA7C,CAAf"},"metadata":{},"sourceType":"module"}