{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.applyExtends = void 0;\n\nconst fs = require(\"fs\");\n\nconst path = require(\"path\");\n\nconst yerror_1 = require(\"./yerror\");\n\nlet previouslyVisitedConfigs = [];\n\nfunction checkForCircularExtends(cfgPath) {\n  if (previouslyVisitedConfigs.indexOf(cfgPath) > -1) {\n    throw new yerror_1.YError(`Circular extended configurations: '${cfgPath}'.`);\n  }\n}\n\nfunction getPathToDefaultConfig(cwd, pathToExtend) {\n  return path.resolve(cwd, pathToExtend);\n}\n\nfunction mergeDeep(config1, config2) {\n  const target = {};\n\n  function isObject(obj) {\n    return obj && typeof obj === 'object' && !Array.isArray(obj);\n  }\n\n  Object.assign(target, config1);\n\n  for (const key of Object.keys(config2)) {\n    if (isObject(config2[key]) && isObject(target[key])) {\n      target[key] = mergeDeep(config1[key], config2[key]);\n    } else {\n      target[key] = config2[key];\n    }\n  }\n\n  return target;\n}\n\nfunction applyExtends(config, cwd) {\n  let mergeExtends = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let defaultConfig = {};\n\n  if (Object.prototype.hasOwnProperty.call(config, 'extends')) {\n    if (typeof config.extends !== 'string') return defaultConfig;\n    const isPath = /\\.json|\\..*rc$/.test(config.extends);\n    let pathToDefault = null;\n\n    if (!isPath) {\n      try {\n        pathToDefault = require.resolve(config.extends);\n      } catch (err) {// most likely this simply isn't a module.\n      }\n    } else {\n      pathToDefault = getPathToDefaultConfig(cwd, config.extends);\n    } // maybe the module uses key for some other reason,\n    // err on side of caution.\n\n\n    if (!pathToDefault && !isPath) return config;\n    if (!pathToDefault) throw new yerror_1.YError(`Unable to find extended config '${config.extends}' in '${cwd}'.`);\n    checkForCircularExtends(pathToDefault);\n    previouslyVisitedConfigs.push(pathToDefault);\n    defaultConfig = isPath ? JSON.parse(fs.readFileSync(pathToDefault, 'utf8')) : require(config.extends);\n    delete config.extends;\n    defaultConfig = applyExtends(defaultConfig, path.dirname(pathToDefault), mergeExtends);\n  }\n\n  previouslyVisitedConfigs = [];\n  return mergeExtends ? mergeDeep(defaultConfig, config) : Object.assign({}, defaultConfig, config);\n}\n\nexports.applyExtends = applyExtends;","map":{"version":3,"names":["Object","defineProperty","exports","value","applyExtends","fs","require","path","yerror_1","previouslyVisitedConfigs","checkForCircularExtends","cfgPath","indexOf","YError","getPathToDefaultConfig","cwd","pathToExtend","resolve","mergeDeep","config1","config2","target","isObject","obj","Array","isArray","assign","key","keys","config","mergeExtends","defaultConfig","prototype","hasOwnProperty","call","extends","isPath","test","pathToDefault","err","push","JSON","parse","readFileSync","dirname"],"sources":["/home/portuga/trybe-projetos/sd-021-b-project-trybewallet/node_modules/yargs/build/lib/apply-extends.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyExtends = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst yerror_1 = require(\"./yerror\");\nlet previouslyVisitedConfigs = [];\nfunction checkForCircularExtends(cfgPath) {\n    if (previouslyVisitedConfigs.indexOf(cfgPath) > -1) {\n        throw new yerror_1.YError(`Circular extended configurations: '${cfgPath}'.`);\n    }\n}\nfunction getPathToDefaultConfig(cwd, pathToExtend) {\n    return path.resolve(cwd, pathToExtend);\n}\nfunction mergeDeep(config1, config2) {\n    const target = {};\n    function isObject(obj) {\n        return obj && typeof obj === 'object' && !Array.isArray(obj);\n    }\n    Object.assign(target, config1);\n    for (const key of Object.keys(config2)) {\n        if (isObject(config2[key]) && isObject(target[key])) {\n            target[key] = mergeDeep(config1[key], config2[key]);\n        }\n        else {\n            target[key] = config2[key];\n        }\n    }\n    return target;\n}\nfunction applyExtends(config, cwd, mergeExtends = false) {\n    let defaultConfig = {};\n    if (Object.prototype.hasOwnProperty.call(config, 'extends')) {\n        if (typeof config.extends !== 'string')\n            return defaultConfig;\n        const isPath = /\\.json|\\..*rc$/.test(config.extends);\n        let pathToDefault = null;\n        if (!isPath) {\n            try {\n                pathToDefault = require.resolve(config.extends);\n            }\n            catch (err) {\n                // most likely this simply isn't a module.\n            }\n        }\n        else {\n            pathToDefault = getPathToDefaultConfig(cwd, config.extends);\n        }\n        // maybe the module uses key for some other reason,\n        // err on side of caution.\n        if (!pathToDefault && !isPath)\n            return config;\n        if (!pathToDefault)\n            throw new yerror_1.YError(`Unable to find extended config '${config.extends}' in '${cwd}'.`);\n        checkForCircularExtends(pathToDefault);\n        previouslyVisitedConfigs.push(pathToDefault);\n        defaultConfig = isPath ? JSON.parse(fs.readFileSync(pathToDefault, 'utf8')) : require(config.extends);\n        delete config.extends;\n        defaultConfig = applyExtends(defaultConfig, path.dirname(pathToDefault), mergeExtends);\n    }\n    previouslyVisitedConfigs = [];\n    return mergeExtends ? mergeDeep(defaultConfig, config) : Object.assign({}, defaultConfig, config);\n}\nexports.applyExtends = applyExtends;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}