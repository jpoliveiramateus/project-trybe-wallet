{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst locatePath = require('locate-path');\n\nconst pathExists = require('path-exists');\n\nconst stop = Symbol('findUp.stop');\n\nmodule.exports = async function (name) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let directory = path.resolve(options.cwd || '');\n  const {\n    root\n  } = path.parse(directory);\n  const paths = [].concat(name);\n\n  const runMatcher = async locateOptions => {\n    if (typeof name !== 'function') {\n      return locatePath(paths, locateOptions);\n    }\n\n    const foundPath = await name(locateOptions.cwd);\n\n    if (typeof foundPath === 'string') {\n      return locatePath([foundPath], locateOptions);\n    }\n\n    return foundPath;\n  }; // eslint-disable-next-line no-constant-condition\n\n\n  while (true) {\n    // eslint-disable-next-line no-await-in-loop\n    const foundPath = await runMatcher({ ...options,\n      cwd: directory\n    });\n\n    if (foundPath === stop) {\n      return;\n    }\n\n    if (foundPath) {\n      return path.resolve(directory, foundPath);\n    }\n\n    if (directory === root) {\n      return;\n    }\n\n    directory = path.dirname(directory);\n  }\n};\n\nmodule.exports.sync = function (name) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let directory = path.resolve(options.cwd || '');\n  const {\n    root\n  } = path.parse(directory);\n  const paths = [].concat(name);\n\n  const runMatcher = locateOptions => {\n    if (typeof name !== 'function') {\n      return locatePath.sync(paths, locateOptions);\n    }\n\n    const foundPath = name(locateOptions.cwd);\n\n    if (typeof foundPath === 'string') {\n      return locatePath.sync([foundPath], locateOptions);\n    }\n\n    return foundPath;\n  }; // eslint-disable-next-line no-constant-condition\n\n\n  while (true) {\n    const foundPath = runMatcher({ ...options,\n      cwd: directory\n    });\n\n    if (foundPath === stop) {\n      return;\n    }\n\n    if (foundPath) {\n      return path.resolve(directory, foundPath);\n    }\n\n    if (directory === root) {\n      return;\n    }\n\n    directory = path.dirname(directory);\n  }\n};\n\nmodule.exports.exists = pathExists;\nmodule.exports.sync.exists = pathExists.sync;\nmodule.exports.stop = stop;","map":{"version":3,"names":["path","require","locatePath","pathExists","stop","Symbol","module","exports","name","options","directory","resolve","cwd","root","parse","paths","concat","runMatcher","locateOptions","foundPath","dirname","sync","exists"],"sources":["/home/portuga/trybe-projetos/sd-021-b-project-trybewallet/node_modules/yargs/node_modules/find-up/index.js"],"sourcesContent":["'use strict';\nconst path = require('path');\nconst locatePath = require('locate-path');\nconst pathExists = require('path-exists');\n\nconst stop = Symbol('findUp.stop');\n\nmodule.exports = async (name, options = {}) => {\n\tlet directory = path.resolve(options.cwd || '');\n\tconst {root} = path.parse(directory);\n\tconst paths = [].concat(name);\n\n\tconst runMatcher = async locateOptions => {\n\t\tif (typeof name !== 'function') {\n\t\t\treturn locatePath(paths, locateOptions);\n\t\t}\n\n\t\tconst foundPath = await name(locateOptions.cwd);\n\t\tif (typeof foundPath === 'string') {\n\t\t\treturn locatePath([foundPath], locateOptions);\n\t\t}\n\n\t\treturn foundPath;\n\t};\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tconst foundPath = await runMatcher({...options, cwd: directory});\n\n\t\tif (foundPath === stop) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (foundPath) {\n\t\t\treturn path.resolve(directory, foundPath);\n\t\t}\n\n\t\tif (directory === root) {\n\t\t\treturn;\n\t\t}\n\n\t\tdirectory = path.dirname(directory);\n\t}\n};\n\nmodule.exports.sync = (name, options = {}) => {\n\tlet directory = path.resolve(options.cwd || '');\n\tconst {root} = path.parse(directory);\n\tconst paths = [].concat(name);\n\n\tconst runMatcher = locateOptions => {\n\t\tif (typeof name !== 'function') {\n\t\t\treturn locatePath.sync(paths, locateOptions);\n\t\t}\n\n\t\tconst foundPath = name(locateOptions.cwd);\n\t\tif (typeof foundPath === 'string') {\n\t\t\treturn locatePath.sync([foundPath], locateOptions);\n\t\t}\n\n\t\treturn foundPath;\n\t};\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\tconst foundPath = runMatcher({...options, cwd: directory});\n\n\t\tif (foundPath === stop) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (foundPath) {\n\t\t\treturn path.resolve(directory, foundPath);\n\t\t}\n\n\t\tif (directory === root) {\n\t\t\treturn;\n\t\t}\n\n\t\tdirectory = path.dirname(directory);\n\t}\n};\n\nmodule.exports.exists = pathExists;\n\nmodule.exports.sync.exists = pathExists.sync;\n\nmodule.exports.stop = stop;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}