{"ast":null,"code":"var _jsxFileName = \"/home/portuga/trybe-projetos/sd-021-b-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { saveEmail } from '../actions';\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      email: '',\n      password: '',\n      button: true\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        loginValidation\n      } = this;\n      this.setState({\n        [target.name]: target.value\n      }, loginValidation);\n    };\n\n    this.loginValidation = () => {\n      const {\n        email,\n        password\n      } = this.state;\n      const emailValidation = /\\S+@\\S+\\.\\S+/;\n      const minCharacters = 5;\n\n      if (emailValidation.test(email) && password.length > minCharacters) {\n        this.setState({\n          button: false\n        });\n      } else {\n        this.setState({\n          button: true\n        });\n      }\n    };\n\n    this.saveEmailInGlobalState = () => {\n      const {\n        history,\n        saveEmailState\n      } = this.props;\n      const {\n        email\n      } = this.state;\n      history.push('/carteira');\n      saveEmailState(email);\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      button\n    } = this.state;\n    const {\n      handleChange,\n      saveEmailInGlobalState\n    } = this; // console.log(history);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      \"data-testid\": \"email-input\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      \"data-testid\": \"password-input\",\n      placeholder: \"Senha\",\n      value: password,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: button,\n      onClick: saveEmailInGlobalState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Entrar\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  saveEmailState: email => dispatch(saveEmail(email))\n});\n\nLogin.propTypes = {\n  history: propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.func, propTypes.array, propTypes.bool, propTypes.object]),\n  saveEmailState: propTypes.func\n}.isRequired; // Documentação utilizada para validação de props:\n// https://pt-br.reactjs.org/docs/typechecking-with-proptypes.html\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"names":["React","propTypes","connect","saveEmail","Login","Component","state","email","password","button","handleChange","target","loginValidation","setState","name","value","emailValidation","minCharacters","test","length","saveEmailInGlobalState","history","saveEmailState","props","push","render","mapDispatchToProps","dispatch","oneOfType","number","string","func","array","bool","object","isRequired"],"sources":["/home/portuga/trybe-projetos/sd-021-b-project-trybewallet/src/pages/Login.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { saveEmail } from '../actions';\nimport './Login.css';\n\nclass Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    button: true,\n  }\n\n  handleChange = ({ target }) => {\n    const { loginValidation } = this;\n    this.setState({\n      [target.name]: target.value,\n    }, loginValidation);\n  }\n\n  loginValidation = () => {\n    const { email, password } = this.state;\n    const emailValidation = /\\S+@\\S+\\.\\S+/;\n    const minCharacters = 5;\n    if (emailValidation.test(email) && password.length > minCharacters) {\n      this.setState({ button: false });\n    } else {\n      this.setState({ button: true });\n    }\n  };\n\n  // Regex usado para validação de email:\n  // https://www.horadecodar.com.br/2020/09/07/expressao-regular-para-validar-e-mail-javascript-regex/\n\n  saveEmailInGlobalState = () => {\n    const { history, saveEmailState } = this.props;\n    const { email } = this.state;\n    history.push('/carteira');\n    saveEmailState(email);\n  };\n\n  render() {\n    const { email, password, button } = this.state;\n    const { handleChange, saveEmailInGlobalState } = this;\n    // console.log(history);\n    return (\n      <div className=\"login\">\n        <div className=\"login-form\">\n          <h2>Login</h2>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            data-testid=\"email-input\"\n            placeholder=\"Email\"\n            value={ email }\n            onChange={ handleChange }\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            data-testid=\"password-input\"\n            placeholder=\"Senha\"\n            value={ password }\n            onChange={ handleChange }\n          />\n          <button\n            type=\"button\"\n            disabled={ button }\n            onClick={ saveEmailInGlobalState }\n          >\n            Entrar\n          </button>\n        </div>\n        <div className=\"login-img\">\n          <img src=\"\" alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveEmailState: (email) => dispatch(saveEmail(email)),\n});\n\nLogin.propTypes = {\n  history: propTypes.oneOfType([\n    propTypes.number,\n    propTypes.string,\n    propTypes.func,\n    propTypes.array,\n    propTypes.bool,\n    propTypes.object,\n  ]),\n  saveEmailState: propTypes.func,\n}.isRequired;\n\n// Documentação utilizada para validação de props:\n// https://pt-br.reactjs.org/docs/typechecking-with-proptypes.html\n\nexport default connect(null, mapDispatchToProps)(Login);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;EAAA;IAAA;IAAA,KAClCC,KADkC,GAC1B;MACNC,KAAK,EAAE,EADD;MAENC,QAAQ,EAAE,EAFJ;MAGNC,MAAM,EAAE;IAHF,CAD0B;;IAAA,KAOlCC,YAPkC,GAOnB,QAAgB;MAAA,IAAf;QAAEC;MAAF,CAAe;MAC7B,MAAM;QAAEC;MAAF,IAAsB,IAA5B;MACA,KAAKC,QAAL,CAAc;QACZ,CAACF,MAAM,CAACG,IAAR,GAAeH,MAAM,CAACI;MADV,CAAd,EAEGH,eAFH;IAGD,CAZiC;;IAAA,KAclCA,eAdkC,GAchB,MAAM;MACtB,MAAM;QAAEL,KAAF;QAASC;MAAT,IAAsB,KAAKF,KAAjC;MACA,MAAMU,eAAe,GAAG,cAAxB;MACA,MAAMC,aAAa,GAAG,CAAtB;;MACA,IAAID,eAAe,CAACE,IAAhB,CAAqBX,KAArB,KAA+BC,QAAQ,CAACW,MAAT,GAAkBF,aAArD,EAAoE;QAClE,KAAKJ,QAAL,CAAc;UAAEJ,MAAM,EAAE;QAAV,CAAd;MACD,CAFD,MAEO;QACL,KAAKI,QAAL,CAAc;UAAEJ,MAAM,EAAE;QAAV,CAAd;MACD;IACF,CAvBiC;;IAAA,KA4BlCW,sBA5BkC,GA4BT,MAAM;MAC7B,MAAM;QAAEC,OAAF;QAAWC;MAAX,IAA8B,KAAKC,KAAzC;MACA,MAAM;QAAEhB;MAAF,IAAY,KAAKD,KAAvB;MACAe,OAAO,CAACG,IAAR,CAAa,WAAb;MACAF,cAAc,CAACf,KAAD,CAAd;IACD,CAjCiC;EAAA;;EAmClCkB,MAAM,GAAG;IACP,MAAM;MAAElB,KAAF;MAASC,QAAT;MAAmBC;IAAnB,IAA8B,KAAKH,KAAzC;IACA,MAAM;MAAEI,YAAF;MAAgBU;IAAhB,IAA2C,IAAjD,CAFO,CAGP;;IACA,oBACE;MAAK,SAAS,EAAC,OAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAK,SAAS,EAAC,YAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,WADF,eAEE;MACE,IAAI,EAAC,OADP;MAEE,IAAI,EAAC,OAFP;MAGE,EAAE,EAAC,OAHL;MAIE,eAAY,aAJd;MAKE,WAAW,EAAC,OALd;MAME,KAAK,EAAGb,KANV;MAOE,QAAQ,EAAGG,YAPb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFF,eAWE;MACE,IAAI,EAAC,UADP;MAEE,IAAI,EAAC,UAFP;MAGE,EAAE,EAAC,UAHL;MAIE,eAAY,gBAJd;MAKE,WAAW,EAAC,OALd;MAME,KAAK,EAAGF,QANV;MAOE,QAAQ,EAAGE,YAPb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAXF,eAoBE;MACE,IAAI,EAAC,QADP;MAEE,QAAQ,EAAGD,MAFb;MAGE,OAAO,EAAGW,sBAHZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,YApBF,CADF,eA6BE;MAAK,SAAS,EAAC,WAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAK,GAAG,EAAC,EAAT;MAAY,GAAG,EAAC,EAAhB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,CA7BF,CADF;EAmCD;;AA1EiC;;AA6EpC,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;EACxCL,cAAc,EAAGf,KAAD,IAAWoB,QAAQ,CAACxB,SAAS,CAACI,KAAD,CAAV;AADK,CAAf,CAA3B;;AAIAH,KAAK,CAACH,SAAN,GAAkB;EAChBoB,OAAO,EAAEpB,SAAS,CAAC2B,SAAV,CAAoB,CAC3B3B,SAAS,CAAC4B,MADiB,EAE3B5B,SAAS,CAAC6B,MAFiB,EAG3B7B,SAAS,CAAC8B,IAHiB,EAI3B9B,SAAS,CAAC+B,KAJiB,EAK3B/B,SAAS,CAACgC,IALiB,EAM3BhC,SAAS,CAACiC,MANiB,CAApB,CADO;EAShBZ,cAAc,EAAErB,SAAS,CAAC8B;AATV,EAUhBI,UAVF,C,CAYA;AACA;;AAEA,eAAejC,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCtB,KAAlC,CAAf"},"metadata":{},"sourceType":"module"}